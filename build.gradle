plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.cyclonedx.bom' version '2.3.0'
    id 'io.spring.javaformat' version '0.0.45'
    id "io.spring.nohttp" version "0.0.11"
}

apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'io.spring.javaformat'

group = 'org.springframework.samples'
version = '3.22.1'

java {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    mavenLocal()
}

ext.checkstyleVersion = "10.23.1"
ext.springJavaformatCheckstyleVersion = "0.0.45"
ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.3.6"

dependencies {
  implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
  implementation 'io.quarkus:quarkus-narayana-jta'
  implementation 'io.quarkus:quarkus-spring-cache'
  implementation 'io.quarkus:quarkus-hibernate-validator'
  implementation 'io.quarkus:quarkus-spring-di'
  implementation 'io.quarkus:quarkus-spring-web'
  implementation 'io.quarkus:quarkus-spring-data-jpa'
  implementation 'io.quarkus:quarkus-rest-jackson'
  implementation 'io.quarkus:quarkus-rest-qute'
  implementation 'io.quarkus:quarkus-smallrye-health'
  implementation 'io.quarkus:quarkus-container-image-docker'
  implementation 'io.quarkus:quarkus-web-dependency-locator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  testImplementation 'io.quarkus:quarkus-junit5'
  testImplementation 'io.quarkus:quarkus-junit5-mockito'
  testImplementation 'io.quarkus:quarkus-test-h2'
  testImplementation 'io.rest-assured:rest-assured'
  implementation 'io.quarkus:quarkus-jdbc-h2'
  implementation 'io.quarkus:quarkus-jdbc-postgresql'
  implementation 'io.quarkus:quarkus-jdbc-mysql'
  checkstyle "io.spring.javaformat:spring-javaformat-checkstyle:${springJavaformatCheckstyleVersion}"
  checkstyle "com.puppycrawl.tools:checkstyle:${checkstyleVersion}"
}


test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

checkstyle {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

checkstyleNohttp {
  configDirectory = project.file('src/checkstyle')
  configFile = file('src/checkstyle/nohttp-checkstyle.xml')
}

tasks.named("formatMain").configure { dependsOn("checkstyleMain") }
tasks.named("formatMain").configure { dependsOn("checkstyleNohttp") }

tasks.named("formatTest").configure { dependsOn("checkstyleTest") }
tasks.named("formatTest").configure { dependsOn("checkstyleNohttp") }


